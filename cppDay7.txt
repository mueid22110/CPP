1.
#include <bits/stdc++.h>
using namespace std;

int main() {
	// your code goes here
	
    int t = 3;
    while (t--){
        int A, B, sum, sq;
	cin >> A >> B;
	
	sum = A + B;
	sq = sum * sum;
	
	cout << sq << endl << sum << endl;

    }
}
2.
#include <iostream>
using namespace std;

// Function to calculate C
int calculateC(int A, int B) {
    return A * A + 2 * A * B + B * B;
}

// Function to calculate D
int calculateD(int A, int B) {
    return A + B;
}

int main() {
    // Repeat the input, calculation, and output process thrice
    int t = 3;
    while(t--) {
        int A, B;
        cin >> A >> B;
        
        // Use functions to calculate C and D
        int C = calculateC(A, B);
        int D = calculateD(A, B);
        
        cout << C << endl;
        cout << D << endl;
    }
    
    
}
3.
#include <iostream>
using namespace std;

// User-defined function to generate and print a list of numbers from 1 to limit
void list_generator(int limit) {
    // Update the code below to solve the problem
    int i = 1;
    while(i <= limit){
        cout << i << " ";
        i++;
    }
    
    cout << endl;
    
}

// Do not update the code below this line

int main() {
    int A, B;
    cin >> A >> B;

    list_generator(A);
    list_generator(B);

    
}
4.
#include <bits/stdc++.h>
using namespace std;

int sum(int a, int b) {
    // Solution
    int result = a + b;
    return result;
}

int square(int a, int b) {
    // Solution
    int result = pow(a, 2) + 2 * a * b + pow(b, 2);
    return result;
}

int main() {
    int t = 3;
    while (t--) {
        int A, B;
        cin >> A >> B;
        cout << square(A, B) << endl << sum(A, B) << endl;
    }
    
}
5.
#include <iostream>
using namespace std;

// Define the greet function
void greet(string name) {
    cout << "Hello, " << name << "!" << endl;
}

int main() {
    // Define the name variable and call the greet function
    string name = "Alice";
    greet(name);
    
    
}
6.
#include <iostream>
using namespace std;

// Global variable
int globalVar = 10;

void displayScopes() {
    // Local variable
    int localVar = 20;

    // Accessing and printing both the global variable and local variable
    cout << localVar << endl;   // Should print 20
    cout << globalVar << endl; // Should print 10
}

int main() {
    // Calling the function
    displayScopes();

    // Accessing and printing the global variable
    // cout << globalVar << endl; // Should print 10

    // Trying to access the local variable here would cause an error as it's out of scope
    // cout << localVar << endl; // Uncommenting this line would cause a compilation error
}
7.
#include <iostream>
#include <string>  // For using string functions
#include <algorithm>  // For using transform function
using namespace std;

// Function to print the greeting
void printGreeting(const string& name) {

    // Convert the greeting to uppercase
    string upperGreeting = "Hello, " + name + "!";

    // converts the string to uppercase
    transform(upperGreeting.begin(), upperGreeting.end(), upperGreeting.begin(), ::toupper);

    // Print the final result
    cout << "Final Result: " << upperGreeting << endl;

}

int main() {
    // The name to be used in the greeting
    string name = "Alice";
    
    printGreeting(name);


    
}


Predefined functions
Predefined functions in C++, also known as built-in functions or standard library functions, are functions that are already provided by the C++ programming language itself or by standard libraries.
Predefined functions are ready to use and can be directly incorporated into your C++ programs without needing to create their definitions.

Here are some common categories of predefined functions in C++.

Input/Output Functions:
You would have to include iostream package to use these functions cout: Used to print formatted output to the console.
cin: Used to read formatted input from the console.
setprecision : Used to set the ios library floating point precision based on the precision specified as the parameter to this method.

Mathematical Functions:
You would have to include cmath package to use these functions sqrt(): Calculates the square root of a number.
abs(): Calculates the absolute value of a number.
pow(): Calculates the power of a number.
ceil(), floor(): Round a number to the nearest integer.

Memory operators:
new : Allocate memory dynamically.
delete : Deallocate memory.

Time Functions:
time(): Get the current time.
ctime(): Convert time to a string.
difftime(): Calculate the difference between two times.

File Handling Functions:
fopen(), fclose(): Open and close files.
fread(), fwrite(): Read and write data from/to files.

Dont worry about all these functions - you will learn about them at a later point in the course.
For now - let's focus on mathematical functions.

8.
#include<bits/stdc++.h>
using namespace std;
// complete the function below to calculcate (a + b)^2
inline int abSquared(int a, int b){
    return pow(a + b, 2);
}
int main(){
    int a, b;
    cin >> a >> b;
    int expression_value = abSquared(a, b);
    std::cout << expression_value << std::endl;
}
9.
#include <bits/stdc++.h>
using namespace std;

// Function to calculate the area of a square
int area(int side) {
    // Complete the function
    return side * side;
} 

// Overloaded function to calculate the surface area of a cube
int area(int side, bool isCube) {
    // Complete the function
    if (isCube) {
        side = side * side * 6;
    }
    return side;
}

// Overloaded function to calculate the area of a circle
double area(double radius) {
    // Complete the function
    return 3.14159 * radius * radius;
}

int main() {
    int a, b;
    double r;

    cin >> a;

    cin >> b;

    cin >> r;

    cout << area(a) << endl;
    cout << area(b, true) << endl;
    cout << area(r) << endl;

    return 0;
}
10.
#include <iostream>
#include <cmath>
#include <iomanip>
using namespace std;

int main() {
    double X = 53.56;
    double Y = 3;
    int A = 45;
    int B = 20;
   
    // Output the absolute value of the difference of A and B
    cout << abs(A - B) << "\n";

    // Output the remainder when A is divided by B
    cout << A % B << "\n";

    //computing the rounded off number upwards to its nearest integer and printing it
    cout << ceil(X) << "\n";
   
    //computing the rounded off number downwards to its nearest integer and printing it
    cout << floor(X) << "\n";

    //computing the value of X to the power of Y and printing it
    cout << pow(X,Y) << "\n";

    
}
11.

